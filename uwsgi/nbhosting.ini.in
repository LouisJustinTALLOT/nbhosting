# helpful resource:, but of great interest:
# http://uwsgi-docs.readthedocs.io/en/latest/ThingsToKnow.html

# install.sh does a setup.py install
# which is how we locate the wsgi application thing
# it is not found relative to the working directory
# we set cwd to the django app so that ./templates/ makes sense

[uwsgi]
projectname = nbhosting
chdir = @srcroot@/nbhosting

# link with python
module = nbhosting.main.wsgi:application
plugins = python3

# runtime - link with nginx
socket = /run/nbhosting.sock
pidfile = /run/uwsgi.pid

# an early attempt was using this
# but we're better off with systemd and journalctl
# logto = @nbhroot@/logs/uwsgi.log

# owners and permissions
chown-socket = nginx:nginx
uid = root
gid = root
listen.owner = root
listen.group = root

# operation mode:
# we run in master mode, even though it makes
# 'systemctl restart nbh-uwsgi' **very slow**
# this can be an impediment in devel mode
# however
# this page below makes it very clear that it's a bad idea
# not to run in master mode
# https://uwsgi-docs.readthedocs.io/en/latest/Glossary.html?highlight=master
# it kind of makes sense, when graceful loading is desired, that
# a complete reload takes time, since there is a lot of
# "waiting for the current jobs to finish" involved in such
# graceful reload approaches
# plus
# running without that master mode was probably also
# the reason behind our first outages, when uwsgi just stopped working
# after a fixed number of requests
master = True

# dimensioning
# using master mode makes things much simpler, no need to
# overprovision the number of running requests
# note: processes and workers are synonym in uwsgi

processes = 128
max-requests = 100000

# stats
# thanks to this setting, it is possible to monitor
# the processes using 
# uwsgitop /tmp/uwsgi-stats.socket
# install with
# pip uwsgitop
stats = /tmp/uwsgi-stats.socket

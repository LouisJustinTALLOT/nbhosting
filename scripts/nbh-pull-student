#!/bin/bash

COMMAND="$(basename $0)"
USAGE="$COMMAND coursename username user_workspace course_hash user_hash"
QUIET=""

function die() { echo "$@"; exit 1; }

function echoq() {
    [ -n "$QUIET" ] && return
    echo "$@"
}

function main() {

    while getopts "qs" option; do
        case $option in
            q) QUIET="true" ;;
        esac
    done
    shift $((OPTIND-1))
    # reset OPTIND for subsequent calls to getopts
    OPTIND=1

    [[ "$#" == 5 ]] || die "$USAGE"
    coursename=$1; shift
    username=$1; shift
    user_workspace=$1; shift
    course_hash=$1; shift
    user_hash=$1; shift

    SUDO="sudo -u $username"
    LOG=.nbh-git.log 

    cd $user_workspace

    echoq "$coursename - $username: (1) regular git pull with fast forward"
    $SUDO git pull --no-commit &>> $LOG && {
        echoq "$coursename - $username: (1) regular git pull OK"
        exit 0
    }

    # surprisingly enough, git pull has no -m option
    $SUDO git fetch --all &>> $LOG
    ancestor=$(git merge-base origin/master $user_hash)
    echoq "$coursename - $username: (2) after fetch --all"
    function assess_damages() {
        # local changes
        git diff --name-only | sort > __LOCAL_CHANGES
        # teacher changes
        git diff --name-only master origin/master | sort > __UPSTREAM_CHANGES
        # find common changes
        comm -12 __LOCAL_CHANGES __UPSTREAM_CHANGES > __COMMON_CHANGES
        # split between notebooks and others
        grep '.ipynb$' __COMMON_CHANGES > __COMMON_CHANGES_IPYNB
        grep -v '.ipynb$' __COMMON_CHANGES > __COMMON_CHANGES_OTHER
    }

    function init-git-in-student-space() {
        $SUDO git config user.name || $SUDO git config --global user.name "$username"
        $SUDO git config user.email || $SUDO git config --global user.email "$username@nbhosting.io"
    }
    assess_damages
    init-git-in-student-space
    local notebook
    for notebook in $(cat __COMMON_CHANGES_IPYNB); do
        echoq "$coursename - $username: (3) nbstripout $notebook"
        $SUDO python3 -m nbstripout $notebook
    done
    local common_changes="$(cat __COMMON_CHANGES)"
    echo ==== git add &>> $LOG
    $SUDO git add $common_changes &>> $LOG
    local commit_message="WIP - nbh is committing local changes in $common_changes"
    echo ==== git commit &>> $LOG
    $SUDO git commit -m"$commit_message" &>> $LOG
    echo ==== git merge &>> $LOG
    $SUDO git merge origin/master -m"nbh is merging upstream" &>> $LOG
    local OK=$?
    echoq "$coursename - $username: (4) upstream merge returned $OK"
    exit $OK
}

main "$@"